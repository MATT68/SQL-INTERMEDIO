DECLARE
   TIPO CHAR;
   R_DEPT DEPARTMENTS%ROWTYPE;
   MSG VARCHAR2(50);   
BEGIN
 TIPO := 'I';
 R_DEPT.DEPARTMENT_NAME := 'PRUEBAS1';
 R_DEPT.MANAGER_ID      :=  190;
 R_DEPT.LOCATION_ID     := 1700;
 P_DEPARTMENT(TIPO, R_DEPT, MSG);
 DBMS_OUTPUT.PUT_LINE(MSG);
END;




CREATE OR REPLACE PROCEDURE P_DEPARTMENT
                                (TIPO   CHAR, 
                                 R_DEPT DEPARTMENTS%ROWTYPE,
                                 MSG  OUT VARCHAR2)
 IS            
  v_dept                EMPLOYEES.DEPARTMENT_ID%TYPE;
  v_employee_id         EMPLOYEES.EMPLOYEE_ID%TYPE;
  v_dept_name           DEPARTMENTS.DEPARTMENT_NAME%TYPE; 
  contador              INTEGER := 1 ;
BEGIN
  CASE TIPO 
  WHEN 'I' THEN
      DBMS_OUTPUT.PUT_LINE(' Llamada de tipo INSERT '); 
      INSERT INTO departments 
      ( department_id, department_name, manager_id, location_id        )
      VALUES (SEQ_DEPARTMENT.NEXTVAL, r_dept.department_name, 
                               r_dept.manager_id, r_dept.location_id);
      MSG := ' 01 - Insertado departamento con c√≥digo : ' || SEQ_DEPARTMENT.CURRVAL;
  WHEN 'U' THEN
      DBMS_OUTPUT.PUT_LINE(' Llamada de tipo UPDATE '); 
      UPDATE departments 
      SET department_name = r_dept.department_name,
          manager_id      = r_dept.manager_id,
          location_id     = r_dept.location_id 
      WHERE department_ID = r_dept.location_id;
      MSG := ' 02 - Actualizado el Departamento : ' || r_dept.location_id;   
  WHEN 'D' THEN
      DBMS_OUTPUT.PUT_LINE(' Llamada de tipo DELETE '); 
      DELETE FROM departments 
      WHERE department_ID = r_dept.location_id;
      MSG := ' 03 - Borrado el Departamento : ' || r_dept.location_id;       
  ELSE  
    MSG := ' 04 - TIPO DE LLAMADA INCORRECTA ';
  END CASE;
END;
